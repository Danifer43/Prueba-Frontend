{"ast":null,"code":"export const ConvertirBase64 = async imagenCargada => {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(imagenCargada);\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = miError => reject(miError);\n  });\n};\n_c = ConvertirBase64;\nvar _c;\n$RefreshReg$(_c, \"ConvertirBase64\");","map":{"version":3,"names":["ConvertirBase64","imagenCargada","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","miError","_c","$RefreshReg$"],"sources":["/media/danifer/Backup/desarrollo/ReactProjecs/pruebafront/src/app/utilities/funciones/ConvertirBase64.tsx"],"sourcesContent":["import { resolve } from \"path\"\r\n\r\nexport const ConvertirBase64 = async (imagenCargada:File)=>{\r\n    return new Promise((resolve, reject) => {\r\n        const fileReader=new FileReader();\r\n\r\n        fileReader.readAsDataURL(imagenCargada);\r\n        fileReader.onload=()=>{resolve(fileReader.result)};\r\n        fileReader.onerror = (miError) =>(reject(miError));\r\n    })\r\n}"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAG,MAAOC,aAAkB,IAAG;EACvD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,MAAMC,UAAU,GAAC,IAAIC,UAAU,CAAC,CAAC;IAEjCD,UAAU,CAACE,aAAa,CAACN,aAAa,CAAC;IACvCI,UAAU,CAACG,MAAM,GAAC,MAAI;MAACL,OAAO,CAACE,UAAU,CAACI,MAAM,CAAC;IAAA,CAAC;IAClDJ,UAAU,CAACK,OAAO,GAAIC,OAAO,IAAKP,MAAM,CAACO,OAAO,CAAE;EACtD,CAAC,CAAC;AACN,CAAC;AAAAC,EAAA,GARYZ,eAAe;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}